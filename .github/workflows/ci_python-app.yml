name: Python Flask App CI Pipeline

on:
  push:
    paths:
      - "python-app/**"
    branches:
      - main
  pull_request:
    paths:
      - "python-app/**"
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Setup Python Environment
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.10"

      - name: Ensure requirements.txt exists
        run: |
          if [ ! -f python-app/requirements.txt ]; then
            echo "File requirements.txt not found"
            exit 1
          fi

      - name: Install Dependencies
        run: |
          cd python-app/
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Cache Python dependencies
        uses: actions/cache@v4.2.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python-app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Sort Imports
        run: |
          cd python-app
          pip install isort
          isort .

      - name: Format Code
        run: |
          cd python-app
          pip install black
          black .
        continue-on-error: false
      
      - name: Commit and Push Formatting Changes
        if: success()
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m 'chore(Python): Automated Code Formatting' && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Run Application
        run: |
          cd python-app
          python app.py &
          sleep 7
          pkill -f "python app.py"
